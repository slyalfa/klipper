# Work in progess.
#
# Klipper firmware config file for Makerbot Replicator 2X To use this config,
# the firmware should be compiled for the AVR atmega1280
#
#  You can build and flash firmware with commands in klipper directory:
# $ make clean
# $ make menuconfig
# $ make
# $ make flash FLASH_DEVICE={your serial port}
#
# for makerbot use this to upload FW
# avrdude -carduino -patmega1280 -P /dev/ttyACM0 -b57600 -D -Uflash:w:out/klipper.elf.hex:i
# avrdude -carduino -patmega1280 -P /dev/serial/by-id/usb-MakerBot_Industries_The_Replicator_75* -b57600 -D -Uflash:w:out/klipper.elf.hex:i
#
#
# Cura Strat G-code
# START_PRINT BED_TEMP={material_bed_temperature_layer_0} EXTRUDER_TEMP={material_print_temperature_layer_0}
#
# Cura End G-code
# END_PRINT
#

[display]
lcd_type: hd44780_spi
spi_software_mosi_pin: PC0
spi_software_sclk_pin: PC1
#miso not used, dummy pin.
spi_software_miso_pin: PJ1
latch_pin: PC3

click_pin: !PG2  # Interface Center
back_pin: !PJ6   # Interface Left
up_pin: !PJ5     # Interface up
down_pin: !PJ4   # Interface Down
# right_pin: !PJ3     # Right

[static_digital_output my_output_pins]
pins:!PA7   # Interface Power

[output_pin led]
pin: PC2   # Interface LED (Red 'M' in center of keypad)
pwm: True
cycle_time: 1
value: .5

# The stepper_x section is used to describe the stepper controlling
# the X axis in a cartesian robot.
# rotation_distance = <full_steps_per_rotation> * <microsteps> * <step_distance>

[stepper_x]
step_pin: PD6
dir_pin: !PD7
enable_pin: !PD4
#step_distance: .010387
# >step_distance: .01125
microsteps: 16
rotation_distance: 36
endstop_pin: ^!PC7 #max
position_endstop: 152
position_max: 153
position_min: -120
homing_speed: 50

[stepper_y]
step_pin: PL5
dir_pin: !PL7
enable_pin: !PL4
#step_distance: .010387
# >step_distance: .01125
microsteps: 16
rotation_distance: 36
endstop_pin: ^!PC6 #max
position_endstop: 77
position_max: 78
position_min: -84
homing_speed: 50

[output_pin BEEPER_Pin]
pin: PH3
#   Beeper pin. This parameter must be provided.
pwm: True
#   A piezo beeper needs a PWM signal, a DC buzzer doesn't.
value: 0
#   Silent at power on, set to 1 if active low.
shutdown_value: 0
#   Disable at emergency shutdown (no PWM would be available anyway).
cycle_time: 0.001
#   PWM frequency : 0.001 = 1ms will give a base tone of 1kHz
scale: 1
#   PWM parameter will be in the range of (0-1000 Hz).
#   Although not pitch perfect.

[gcode_macro M300]
gcode:
    {% set S = params.S|default(1000)|int %} ; S sets the tone frequency
    {% set P = params.P|default(100)|int %} ; P sets the tone duration
    {% set L = 0.5 %} ; L varies the PWM on time, close to 0 or 1 the tone gets a bit quieter. 0.5 is a symmetric waveform
    {% if S <= 0 %} ; dont divide through zero
    {% set F = 1 %}
    {% set L = 0 %}
    {% elif S >= 10000 %} ;max frequency set to 10kHz
    {% set F = 0 %}
    {% else %}
    {% set F = 1/S %} ;convert frequency to seconds
    {% endif %}
    SET_PIN PIN=BEEPER_Pin VALUE={L} CYCLE_TIME={F} ;Play tone
    G4 P{P} ;tone duration
    SET_PIN PIN=BEEPER_Pin VALUE=0


[gcode_macro M72]
gcode:

    {% if params.P|int == 9 %}
    M300 S294 P220 ;N1 D4 1/8
    M300 S311 P220 ;N2 D#4 1/8
    M300 S330 P220 ;N3 E4 1/8
    M300 S523 P460 ;N4 C5 1/4
    M300 S330 P220 ;N5 E4 1/8
    M300 S523 P230 ;N6 C5 1/8
    M300 S330 P220 ;N7 E4 1/8
    M300 S523 P230 ;N8 C5 1/8
    M300 S523 P950 ;N9 C5 1/2
    M300 S523 P220 ;N10 C5 1/8
    M300 S523 P220 ;N11 C5 1/8
    M300 S587 P220 ;N12 D5 1/8
    M300 S622 P220 ;N13 D#5 1/8
    M300 S659 P220 ;N14 E5 1/8
    M300 S523 P220 ;N15 C5 1/8
    M300 S587 P220 ;N16 D5 1/8
    M300 S659 P230 ;N17 E5 1/8
    M300 S659 P230 ;N11 E5 1/8
    M300 S494 P220 ;N19 B4 1/8
    M300 S587 P460 ;N20 D5 1/2
    M300 S523 P1420; C5 1/2+1/4
    M300 S0 P1920; pause one measure
    {% endif %}

    {% if params.P|int == 0 %} ; print error
    M300 S659 P105 ;E5
    M300 S0 P105 ;
    M300 S494 P105 ;B4
    M300 S0 P105 ;
    M300 S294 P105 ;D4
    M300 S0 P105 ;
    {% endif %}

    {% if params.P|int == 1 %} ; print done ta-da
    M300 S880 P188 ;A5
    M300 S0 P188 ;
    M300 S1760 P188 ;A6
    M300 S0 P188 ;
    M300 S1976 P188 ;B6
    M300 S0 P188 ;
    M300 S2093 P188 ;C7
    M300 S2217 P188 ;CS7
    M300 S0 P188 ;
    M300 S3520 P188 ;A7
    M300 S0 P0 ;
    {% endif %}

    {% if params.P|int == 3 %} ; startup
    M300 S3520 P288 ;A7
    M300 S0 P188 ;
    M300 S4435 P188 ;CS8
    M300 S0 P188 ;
    M300 S4699 P433 ;D8
    M300 S0 P0 ;
    {% endif %}

    {% if params.P|int == 4 %} ; makerbot tv
    M300 S3520 P200 ;A7
    M300 S0 P20 ;
    M300 S3520 P200 ;A7
    M300 S0 P20 ;
    M300 S3729 P400 ;AS7
    M300 S0 P20 ;
    M300 S4186 P400 ;C8
    M300 S0 P20 ;
    M300 S3520 P800 ;A7
    M300 S0 P0 ;
    {% endif %}

    {% if params.P|int == 5 %} ; Beerhoven 5th
    M300 S1480 P200 ;FS6
    M300 S0 P20 ;
    M300 S1480 P200 ;FS6
    M300 S0 P20 ;
    M300 S1480 P200 ;FS6
    M300 S0 P20 ;
    M300 S1245 P1200 ;DS6
    M300 S0 P20 ;
    M300 S1397 P200 ;F6
    M300 S0 P20 ;
    M300 S1397 P200 ;F6
    M300 S0 P20 ;
    M300 S1397 P200 ;F6
    M300 S0 P20 ;
    M300 S1175 P1200 ;D6
    M300 S0 P20 ;
    M300 S0 P0 ;
    {% endif %}

# The stepper_z section is used to describe the stepper controlling
# the Z axis in a cartesian robot. It has the same settings as the

[stepper_z]
step_pin: PL1
dir_pin: !PL2
enable_pin: !PL0
microsteps: 16
rotation_distance: 8
# >step_distance: .0025
endstop_pin: !PC5  # min
position_endstop: 0
position_max: 230
position_min: 0
homing_speed: 20



[extruder]
step_pin: PA3
#dir_pin: PA2 # with BMG gear reduced
dir_pin: !PA2
enable_pin: !PA5
#step_distance: .010387
#step_distance: .0034623
microsteps: 16
#rotation_distance: 8.96 # with BMG gear reduced
rotation_distance: 33

# >step_distance: .0028
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PE5
sensor_type: ADS1118
sensor_pin: PE6  #cs
spi_software_sclk_pin: PE2
spi_software_mosi_pin: PH2
spi_software_miso_pin: PE7
control: pid
pid_Kp: 26.414
pid_Ki: 1.115
pid_Kd: 156.5054
min_temp: 0
max_temp: 260
pressure_advance: 0.337

# Secondary extruder
[extruder1]
step_pin: PA0
dir_pin: PK7
enable_pin: !PA1
#step_distance: .010387
#step_distance: .0034623
# with BMG gear reduced
microsteps: 16
rotation_distance: 8.96 # with BMG gear reduced
# >step_distance: .0028
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PE3
# ADS1118B the B is the 2nd input to the chip
sensor_type: ADS1118B
#sensor_pin: PE6  #cs
# dummy CS there is no PG6 but cant be reused
sensor_pin: PG6  #cs
spi_software_sclk_pin: PE2
spi_software_mosi_pin: PH2
spi_software_miso_pin: PE7
control: pid
pid_Kp: 26.414
pid_Ki: 1.115
pid_Kd: 156.5054
min_temp: 0
max_temp: 260
pressure_advance: 0.337

[verify_heater extruder]
heating_gain: 2
check_gain_time:35
hysteresis: 10
max_error: 130

[heater_fan extruder_fan]
pin: PH4

[heater_fan extruder_fan1]
pin: PE4

[gcode_macro T0]
gcode:
    SET_GCODE_OFFSET X=-34
    ACTIVATE_EXTRUDER EXTRUDER=extruder

[gcode_macro T1]
gcode:
    SET_GCODE_OFFSET X=0
    ACTIVATE_EXTRUDER EXTRUDER=extruder1

# The heater_bed section describes a heated bed.
[heater_bed]
heater_pin: PH5
sensor_type: ATC Semitec 104GT-2
sensor_pin: PF3 #adc3
control: pid
pid_Kp: 70.037
pid_Ki: 1.710
pid_Kd: 717.000
min_temp: 0
max_temp: 130

# Print cooling fan (omit section if fan not present).
[fan]
pin: PG5


# Micro-controller information.

[mcu]
#serial: /dev/ttyACM0
serial: /dev/serial/by-id/usb-MakerBot_Industries_The_Replicator_752373335363514111E0-if00 # this will differ on each printer as this is part of the S/N
restart_method: mightyboard
baud: 250000

# The printer section controls high level printer settings.

[printer]
kinematics: cartesian
#   This option must be "cartesian" for cartesian printers.
max_velocity: 500
#   Maximum velocity (in mm/s) of the toolhead (relative to the
#   print). This parameter must be specified.
max_accel: 3000
#   Maximum acceleration (in mm/s^2) of the toolhead (relative to the
#   print). This parameter must be specified.
#max_accel_to_decel:
#   A pseudo acceleration (in mm/s^2) controlling how fast the
#   toolhead may go from acceleration to deceleration. It is used to
#   reduce the top speed of short zig-zag moves (and thus reduce
#   printer vibration from these moves). The default is half of
#   max_accel.
max_z_velocity: 25
#   For cartesian printers this sets the maximum velocity (in mm/s) of
#   movement along the z axis. This setting can be used to restrict
#   the maximum speed of the z stepper motor on cartesian
#   printers. The default is to use max_velocity for max_z_velocity.
max_z_accel: 30



[mcp4018 x_axis_pot]
scl_pin: PA6
sda_pin: PD5
wiper: 0.50
scale: 0.773

[mcp4018 y_axis_pot]
scl_pin: PA6
sda_pin: PL6
wiper: 0.50
scale: 0.773

[mcp4018 z_axis_pot]
scl_pin: PA6
sda_pin: PL3
wiper: 0.20
scale: 0.773

[mcp4018 a_axis_pot]
scl_pin: PA6
sda_pin: PA4
wiper: 0.50
scale: 0.773

[mcp4018 b_axis_pot]
scl_pin: PA6
sda_pin: PJ7
wiper: 0.50
scale: 0.773

[pca9632 led]
color_order: BGRW
initial_BLUE: 0.1
initial_GREEN: 0.1
initial_RED: 0.1

[gcode_macro M105]
rename_existing:            M105.1
gcode:

   M105.1

   #if the extruder is off
   {% if printer.extruder.target == 0 %}

      #Set the LED to red if the extruder is off but is still hot, otherwise
      # set the color to green
      {% if printer.extruder.temperature > 60.0 %}
         SET_LED LED=led RED=1 GREEN=0.2 BLUE=0 INDEX=1  TRANSMIT=1
      {% else %}
         SET_LED LED=led RED=0.1 GREEN=0.1 BLUE=0.1 INDEX=1  TRANSMIT=1
      {% endif %}

   {% else %}

         #if the extruder temp is at target temperature
         {% if printer.extruder.temperature >= printer.extruder.target - 4.0 %}
            SET_LED LED=led RED=1 GREEN=0.2 BLUE=0.2 INDEX=1  TRANSMIT=1

         #if the extruder is still heating
         {% else %}
            {% set scaler = printer.extruder.temperature|float / printer.extruder.target|float %}
            SET_LED LED=led RED={ scaler|float * 1 } GREEN=0 BLUE=0 INDEX=1  TRANSMIT=1
         {% endif %}

   {% endif %}


[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    # Start bed heating
    SET_LED LED=led RED=1 GREEN=0.1 BLUE=0.0 INDEX=1  TRANSMIT=1
    M140 S{BED_TEMP}
    G92 E0
    # Use absolute coordinates
    G90
    # Reset the G-Code Z offset (adjust Z offset if needed)
    SET_GCODE_OFFSET Z=-0.01
    # Home the printer
    G28
    # Move the nozzle near the bed
    G1 Z5 F3000
    # Move the nozzle very close to the bed
    G1 Z0.15 F300
    # Wait for bed to reach temperature
    M190 S{BED_TEMP}
    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP}
    M72 P3
    #(Extruder Prime Dry Move)
    G1 X105.400 Y-74.000 Z0.270 F9000.000
    #(Extruder Prime Start)
    G1 X0 Y-73 Z0.270 F1000.000 E25.000
    #G1 X-112.0 Y-73.0 Z0.01 F1000 E0.0
    G1 X0 Y0 Z0.01 F1000 E0.0
    #( set E to 0 again because the slicer's next extrusion is relative to this 0)
    G92 E0


[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    # set extruder temperature to 0
    M104 S0 T0
    # set other extruder temperature to 0
    M104 S0 T1
    # set bed temperature to 0
    M140 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000
    G90
    # home X and Y axes
    G28 X Y F2500
    # send the build plate to the bottom
    G1 Z150 F1100
    # Play Ta-Da
    M72 P1
    # Disable steppers
    M84
